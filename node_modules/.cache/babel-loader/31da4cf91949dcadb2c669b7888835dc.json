{"ast":null,"code":"var _jsxFileName = \"/Users/mstuehrenberg/Documents/GitHub/mini-hackathon-frontend/src/pages/Form/Form.tsx\",\n    _s = $RefreshSig$();\n\nimport './Form.css';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  var _errors$fullname, _errors$username, _errors$email, _errors$password, _errors$confirmPasswo, _errors$acceptTerms;\n\n  const validationSchema = Yup.object().shape({\n    fullname: Yup.string().required('Fullname is required'),\n    username: Yup.string().required('Username is required').min(6, 'Username must be at least 6 characters').max(20, 'Username must not exceed 20 characters'),\n    email: Yup.string().required('Email is required').email('Email is invalid'),\n    password: Yup.string().required('Password is required').min(8, 'Password must be at least 6 characters').max(40, 'Password must not exceed 40 characters'),\n    confirmPassword: Yup.string().required('Confirm Password is required').oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\n    acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required')\n  });\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n\n  const onSubmit = data => {\n    console.log(JSON.stringify(data, null, 2));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ...register('fullname'),\n          className: `form-control ${errors.fullname ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$fullname = errors.fullname) === null || _errors$fullname === void 0 ? void 0 : _errors$fullname.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ...register('username'),\n          className: `form-control ${errors.username ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ...register('email'),\n          className: `form-control ${errors.email ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ...register('password'),\n          className: `form-control ${errors.password ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ...register('confirmPassword'),\n          className: `form-control ${errors.confirmPassword ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$confirmPasswo = errors.confirmPassword) === null || _errors$confirmPasswo === void 0 ? void 0 : _errors$confirmPasswo.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          ...register('acceptTerms'),\n          className: `form-check-input ${errors.acceptTerms ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"acceptTerms\",\n          className: \"form-check-label\",\n          children: \"I have read and agree to the Terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$acceptTerms = errors.acceptTerms) === null || _errors$acceptTerms === void 0 ? void 0 : _errors$acceptTerms.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => reset(),\n          className: \"btn btn-warning float-right\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"F372SiVXYlwlPcTvXEYo94zLupw=\", false, function () {\n  return [useForm];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useForm","yupResolver","Yup","Form","validationSchema","object","shape","fullname","string","required","username","min","max","email","password","confirmPassword","oneOf","ref","acceptTerms","bool","register","handleSubmit","reset","formState","errors","resolver","onSubmit","data","console","log","JSON","stringify","message"],"sources":["/Users/mstuehrenberg/Documents/GitHub/mini-hackathon-frontend/src/pages/Form/Form.tsx"],"sourcesContent":["import './Form.css';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\n\ntype UserSubmitForm = {\n  fullname: string;\n  username: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n  acceptTerms: boolean;\n};\n\nconst Form: React.FC = () => {\n  const validationSchema = Yup.object().shape({\n    fullname: Yup.string().required('Fullname is required'),\n    username: Yup.string()\n      .required('Username is required')\n      .min(6, 'Username must be at least 6 characters')\n      .max(20, 'Username must not exceed 20 characters'),\n    email: Yup.string()\n      .required('Email is required')\n      .email('Email is invalid'),\n    password: Yup.string()\n      .required('Password is required')\n      .min(8, 'Password must be at least 6 characters')\n      .max(40, 'Password must not exceed 40 characters'),\n    confirmPassword: Yup.string()\n      .required('Confirm Password is required')\n      .oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\n    acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required')\n  });\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors }\n  } = useForm<UserSubmitForm>({\n    resolver: yupResolver(validationSchema)\n  });\n\n  const onSubmit = (data: UserSubmitForm) => {\n    console.log(JSON.stringify(data, null, 2));\n  };\n\n  return (\n    <div className=\"register-form\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-group\">\n          <label>Full Name</label>\n          <input\n            type=\"text\"\n            {...register('fullname')}\n            className={`form-control ${errors.fullname ? 'is-invalid' : ''}`}\n          />\n          <div className=\"invalid-feedback\">{errors.fullname?.message}</div>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Username</label>\n          <input\n            type=\"text\"\n            {...register('username')}\n            className={`form-control ${errors.username ? 'is-invalid' : ''}`}\n          />\n          <div className=\"invalid-feedback\">{errors.username?.message}</div>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Email</label>\n          <input\n            type=\"text\"\n            {...register('email')}\n            className={`form-control ${errors.email ? 'is-invalid' : ''}`}\n          />\n          <div className=\"invalid-feedback\">{errors.email?.message}</div>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Password</label>\n          <input\n            type=\"password\"\n            {...register('password')}\n            className={`form-control ${errors.password ? 'is-invalid' : ''}`}\n          />\n          <div className=\"invalid-feedback\">{errors.password?.message}</div>\n        </div>\n        <div className=\"form-group\">\n          <label>Confirm Password</label>\n          <input\n            type=\"password\"\n            {...register('confirmPassword')}\n            className={`form-control ${\n              errors.confirmPassword ? 'is-invalid' : ''\n            }`}\n          />\n          <div className=\"invalid-feedback\">\n            {errors.confirmPassword?.message}\n          </div>\n        </div>\n\n        <div className=\"form-group form-check\">\n          <input\n            type=\"checkbox\"\n            {...register('acceptTerms')}\n            className={`form-check-input ${\n              errors.acceptTerms ? 'is-invalid' : ''\n            }`}\n          />\n          <label htmlFor=\"acceptTerms\" className=\"form-check-label\">\n            I have read and agree to the Terms\n          </label>\n          <div className=\"invalid-feedback\">{errors.acceptTerms?.message}</div>\n        </div>\n\n        <div className=\"form-group\">\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Register\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => reset()}\n            className=\"btn btn-warning float-right\"\n          >\n            Reset\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}